name: Maven Package and Release


on:
  push:
    branches: [ "auto_build" ]
  pull_request:
    branches: [ "auto_build" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Install Dependencies
      run: |
        chmod +x install_deps.sh
        ./install_deps.sh

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Create Release and Upload Artifacts
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: Autobuild_${{ github.run_number }}
        release_name: Autobuild ${{ github.run_number }}
        body: Autobuild ${{ github.run_number }}
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: target/Elaina.jar
        asset_name: Elaina.jar
        asset_content_type: application/java-archive
